     1                                  ;thx https://qiita.com/pollenjp/items/8fcb9573cdf2dc6e2668
     2                                  ; nasmfunc.asm
     3                                  ; TAB=4
     4                                  
     5                                  section .text
     6                                      GLOBAL  io_hlt, io_cli, io_sti, io_stihlt
     7                                      GLOBAL  io_in8, io_in16, io_in32
     8                                      GLOBAL  io_out8, io_out16, io_out32
     9                                      GLOBAL  io_load_eflags, io_store_eflags
    10                                      GLOBAL  load_idtr, load_gdtr
    11                                  
    12                                  io_hlt:
    13 00000000 F4                          HLT
    14 00000001 C3                          RET
    15                                  
    16                                  io_cli:
    17                                      CLT
    17          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    18 00000002 C3                          RET
    19                                  
    20                                  io_sti:
    21 00000003 FB                          STI
    22 00000004 C3                          RET
    23                                  
    24                                  io_stihlt:
    25 00000005 FB                          STI
    26 00000006 F4                          HLT
    27 00000007 C3                          RET
    28                                  
    29                                  io_in8: ;int io_in8(int port)
    30 00000008 8B542404                    MOV EDX, [ESP+4];
    31 0000000C B800000000                  MOV EAX, 0
    32 00000011 EC                          IN AL, DX
    33 00000012 C3                          RET
    34                                  
    35                                  io_in16: ;int io_in16(int port)
    36 00000013 8B542404                    MOV EDX, [ESP+4]
    37 00000017 B800000000                  MOV EAX, 0
    38 0000001C 66ED                        IN AX, DX
    39 0000001E C3                          RET
    40                                  
    41                                  io_in32: ;int io_in32(int port)
    42 0000001F 8B542404                    MOV EDX, [ESP+4]
    43 00000023 ED                          IN EAX, DX
    44 00000024 C3                          RET
    45                                  
    46                                  io_out8:
    47 00000025 8B542404                    MOV EDX, [ESP+4]
    48 00000029 8A442408                    MOV AL, [ESP+8]
    49 0000002D EE                          OUT DX, AL
    50 0000002E C3                          RET
    51                                  
    52                                  io_out16:
    53 0000002F 8B542404                    MOV EDX, [ESP+4]
    54 00000033 8B442408                    MOV EAX, [ESP+8]
    55 00000037 66EF                        OUT DX, AX
    56 00000039 C3                          RET
    57                                  
    58                                  io_out32:
    59 0000003A 8B542404                    MOV EDX, [ESP+4]
    60 0000003E 8B442408                    MOV EAX, [ESP+8]
    61 00000042 EF                          OUT DX, EAX
    62 00000043 C3                          RET
    63                                  
    64                                  io_load_eflags:
    65 00000044 9C                          PUSHFD  ;   PUSH EFLAGS という意味
    66 00000045 58                          POP EAX
    67 00000046 C3                          RET
    68                                  
    69                                  io_store_eflags:
    70 00000047 8B442404                    MOV EAX, [ESP+4]
    71 0000004B 50                          PUSH EAX
    72 0000004C 9D                          POPFD   ;   POP EFLAGS という意味
    73 0000004D C3                          RET
    74                                  
    75                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    76 0000004E 668B442404              		MOV		AX,[ESP+4]		; limit
    77 00000053 6689442406              		MOV		[ESP+6],AX
    78 00000058 0F01542406              		LGDT	[ESP+6]
    79 0000005D C3                      		RET
    80                                  
    81                                  load_idtr:		; void load_idtr(int limit, int addr);
    82 0000005E 668B442404              		MOV		AX,[ESP+4]		; limit
    83 00000063 6689442406              		MOV		[ESP+6],AX
    84 00000068 0F015C2406              		LIDT	[ESP+6]
    85 0000006D C3                      		RET
